/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                              &kp LGUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6     &kp N7          &kp N8           &kp N9  &kp N0  &kp BSPC
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans     &kp UP_ARROW    &trans           &trans  &trans  &trans
&kp LCTRL  &trans  &trans  &trans    &trans  &trans       &kp LEFT   &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans  &kp TAB
                           &kp LGUI  &trans  &kp SPACE    &kp ENTER  &mo 3           &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp EXCL  &kp AT                &kp HASH           &kp DLLR          &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &trans    &kp C_BRIGHTNESS_INC  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT         &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL  &trans    &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp K_MUTE        &kp C_VOLUME_UP    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                           &kp LGUI           &mo 3             &kp SPACE          &kp ENTER  &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC    &kp F2      &kp F3      &kp F4            &kp F5        &kp F6          &kp F7           &kp F8           &kp F9           &kp F10  &kp F11  &kp F12
&kp LSHFT  &bt BT_CLR  &bt BT_NXT  &bt BT_PRV        &bt BT_SEL 0  &bt BT_SEL 1    &rgb_ug RGB_ON   &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans   &trans   &trans
&kp LCTRL  &bl BL_ON   &bl BL_OFF  &bl BL_INC        &bl BL_DEC    &bl BL_CYCLE    &rgb_ug RGB_OFF  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &trans   &trans   &kp TAB
                                   &kp LEFT_COMMAND  &trans        &kp SPACE       &kp ENTER        &trans           &kp RIGHT_ALT
            >;
        };
    };
};
